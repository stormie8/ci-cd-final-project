apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup
spec:
  workspaces:
    - name: source
  steps:
    - name: remove
      image: alpine:3
      env:
        - name: WORKSPACE_SOURCE_PATH
          value: $(workspaces.source.path)
      workingDir: $(workspaces.source.path)
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      script: |
        #!/usr/bin/env sh
        set -eu
        echo "Removing all files from ${WORKSPACE_SOURCE_PATH} ..."
        if [ -d "${WORKSPACE_SOURCE_PATH}" ] ; then
          rm -rf "${WORKSPACE_SOURCE_PATH:?}"/*
          rm -rf "${WORKSPACE_SOURCE_PATH}"/.[!.]*
          rm -rf "${WORKSPACE_SOURCE_PATH}"/..?*
        fi
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: nose
spec:
  workspaces:
    - name: source
  params:
    - name: args
      description: Arguments to pass to nose
      type: string
      default: "-v"
  steps:
    - name: nosetests
      image: python:3.9-slim
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt
        nosetests $(params.args)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: flake8
spec:
  description: This task will run flake8 on the provided input.
  params:
    - name: image
      type: string
      default: 'python:3.9-slim'
      description: The container image with flake8
    - name: path
      type: string
      default: '.'
      description: The path to the module which should be analysed by flake8
    - name: requirements_file
      type: string
      default: 'requirements.txt'
      description: The name of the requirements file inside the source location
    - name: args
      type: array
      default: []
      description: The arguments to pass to the flake8 CLI.
  steps:
    - name: flake8
      image: $(params.image)
      script: |
        #!/bin/bash
        set -e
        export HOME=/tmp/home
        export PATH=$PATH:$HOME/.local/bin

        echo "Installing pip and flake8..."
        python -m ensurepip --upgrade
        python -m pip install --upgrade pip
        python -m pip install flake8

        if [ -n "$(params.requirements_file)" ] && [ -e "$(params.requirements_file)" ]; then
          echo "Installing requirements from $(params.requirements_file)..."
          python -m pip install -r $(params.requirements_file)
        fi

        echo "Running flake8..."
        flake8 $(params.args) $(params.path)
  workspaces:
    - name: source